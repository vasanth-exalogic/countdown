<link href="https://fonts.googleapis.com/css?family=Bangers|Shadows+Into+Light&display=swap" rel="stylesheet">
<template>
  <div class="helium" style='display:;'>
    <div class="balloon" style='display:;'>
     <div class="knot" style='display:;'><div class="string" style='display:;'></div</div>
    </div>
   </div>
 </template>
 <div class="container">
       <h1 id='bday'>Happy bday <%= @user.name %>...!</h1>
       <h1 id="head"></h1><br><br><br><br><br>
       <h1 id="countdown_body"></h1>
 </div>
 <div class="living-room"></div>

 <button class="refresh">
 <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 18 18"  ><path d="M9 13.5c-2.49 0-4.5-2.01-4.5-4.5S6.51 4.5 9 4.5c1.24 0 2.36.52 3.17 1.33L10 8h5V3l-1.76 1.76C12.15 3.68 10.66 3 9 3 5.69 3 3.01 5.69 3.01 9S5.69 15 9 15c2.97 0 5.43-2.16 5.9-5h-1.52c-.46 2-2.24 3.5-4.38 3.5z"/></svg>
 </button>
 <style media="screen">
   * {
     box-sizing: border-box;
     margin: 0;
     padding: 0;
   }

   body {
     background-color: #ffd54f;
   }

   .container {
     color: #333;
     text-align: center;
   }

   h1 {
     font-weight: normal;
   }

    /* general styling */
   html, body {
     height: 100%;
     margin: 0;
   }

   body {
     -webkit-box-align: center;
     -ms-flex-align: center;
     align-items: center;
     display: -webkit-box;
     display: -ms-flexbox;
     display: flex;
   }

   .container {
     margin: 0 auto;
   }
   #head{
     font-family: 'Bangers', cursive;
     font-size: 40px;
   }
   #countdown_body{
     font-family: 'Shadows Into Light', cursive;
     font-size: 100px;
   }
   #bday{
     font-family: 'Bangers', cursive;
     font-size: 70px;
   }
   * {
    box-sizing: border-box;
   }

   body {
    /* background: #233140; */
    /* cursor: none; */
   }

   .living-room {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100vw;
    height: 100vh;
    margin: 0 auto;
    overflow: hidden;
    position: absolute;
    cursor: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='iso-8859-1'%3F%3E%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px'  width='36px' height='36px' viewBox='0 0 58 58' style='enable-background:new 0 0 58 58;' xml:space='preserve' transform='rotate(30)'%3E%3Cline stroke='%23ffffff' stroke-width='4px' stroke-linecap='round' stroke-miterlimit='10' x1='29' y1='18' x2='29' y2='57'/%3E%3Ccircle fill='%23DD352E' cx='29' cy='14' r='10'/%3E%3C/svg%3E%0A"),
     move;
   }

   .helium {
    position: relative;
   }

   .balloon {
    transition: width 600ms, height 600ms, bottom 800ms;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 80px;
    height: 100px;
    margin: 0.25rem;
    text-align: center;
    border-radius: 50% 50% 50% 50% / 40% 40% 60% 60%;
    box-shadow: inset -5px -5px 0 rgba(0, 0, 0, 0.07),
     inset 0 0 4px 5px rgba(0, 0, 0, 0.03);
    animation: flyUp 5s linear 1;
    position: absolute;
    transition: transform 2s;
   }

   .knot {
    margin-top: 94px;
    border-right: 4px solid transparent;
    border-bottom: 12px solid transparent;
    border-left: 4px solid transparent;
    animation: sway 2s infinite ease;
    transition: border-bottom 1s;
   }

   .string {
    position: absolute;
    left: -1px;
    display: block;
    width: 2px;
    height: 100px;
    margin-top: 12px;
    background: rgba(255, 255, 255, 0.45);
    opacity: 1;
    transition: opacity 2s;
   }

   .refresh {
    position: absolute;
    right: 0;
    bottom: 0;
    background: transparent;
    outline: 0;
    padding: 0;
    z-index: 0;
    border: 0;
   }
   .refresh svg {
    fill: rgba(255, 255, 255, 0.7);
   }
   .refresh:hover {
    opacity: 0.8;
    cursor: pointer;
   }
   .refresh:focus svg {
    fill: rgba(255, 255, 255, 0.7);
   }

   @keyframes flyUp {
    0% {
     transform: translateY(90vh);
    }
    100% {
     transform: translateY(0);
    }
   }
   @keyframes sway {
    0%,
    100% {
     transform: translateX(-5px);
    }
    50% {
     transform: translateX(0);
    }
   }

   .popped {
    animation: noAir 2s 1;
   }

   @keyframes noAir {
    0% {
     transform: translate(0, 20vh);
    }
    100% {
     transform: translate(0, 80vh);
    }
   }
 </style>
 <script type="text/javascript">
   var palette = ['#eb4d4b', '#badc58', '#f9ca24', '#22a6b3']

   function random(min = 0, max = 10) {
     return Math.floor(Math.random() * (max - min + 1)) + min
   }

   function generateColor() {
     let index = random(0, palette.length - 1)
     return palette[index]
   }

   function cleanUp(el) {
     while (el.firstChild) {
       el.removeChild(el.firstChild)
     }
   }

   function partyTime() {
     // remove exisiting elements before creaitng new ones
    const container = document.querySelector('.living-room')
     cleanUp(container)

     let numberOfBalloons = (window.innerWidth / 80) * 5

     for (var i = 0; i < numberOfBalloons; i++) {

       const template = document.querySelector('template').content.cloneNode(true)

       let thisColor = generateColor()
       let transform = {
         rotate: Math.floor(random(-15, 15) * 1.25) + 'deg',
         translateX: random(-window.innerWidth / 2, window.innerWidth / 2) + 'px',
         translateY: random(-100, 100) + 'px',
       }

       template.querySelector('.helium').style.transform = Object.keys(transform)
         .map(prop => `${prop}(${transform[prop]})`).join(' ')
       template.querySelector('.balloon').style.background = thisColor
       template.querySelector('.knot').style.borderBottomColor = thisColor

       container.appendChild(document.importNode(template, true))
     }

     document.querySelectorAll('.helium').forEach(e => e.addEventListener('click', function(ev) {
       Object.assign(ev.target.style, {
         width: `.${random(50, 75)}rem`,
         height: '3px',
         transform: `translateY(${window.innerHeight
             * 0.9}px) skew(20deg,0deg) rotate(${random(0, 100)}deg)`,
         transition: 'transform 1s ease-out',
       })
       ev.target.classList.add('popped')

       ev.target.querySelector('.string').style.opacity = 0
       ev.target.querySelector('.knot').style.borderBottomWidth = '3px'
       ev.target.querySelector('.knot').style.animationPlayState = 'paused'
     }))
   }


   document.querySelector('.refresh').addEventListener('click', partyTime)

   partyTime(document.querySelector('.living-room'))
 </script>
